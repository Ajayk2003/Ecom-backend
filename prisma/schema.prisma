generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL_LOCAL")
}

// schema.prisma

enum OrderStatus {
  placed
  cancelled
  shipped
  delivered
}


model User {
  id         Int       @id @default(autoincrement()) 
  firstName  String 
  lastName   String 
  password   String
  email      String   @unique
  phone      String   @unique
  isDeleted  Boolean  @default(false)
  createdAt  DateTime @default(now()) 
  updatedAt  DateTime @updatedAt 
  order      Order[]
  review     Review[]
  cartItem   CartItem[]
  @@map("tbl_users")
}

model Seller {
  id          Int       @id @default(autoincrement()) 
  firstName   String 
  lastName    String 
  password    String
  email       String   @unique
  phone       String   @unique
  description String
  products    Product[]
  isDeleted   Boolean  @default(false)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  @@map("tbl_sellers")
}



model Product {
  id          Int       @id @default(autoincrement())
  name        String
  description String
  price       Decimal
  imageUrl    String?
  category    String
  sellerId    Int
  isDeleted   Boolean  @default(false)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  seller      Seller    @relation(fields: [sellerId], references: [id])
  orderItem   OrderItem[]
  review      Review[]
  cartItems   CartItem[]
  @@map("tbl_products")

}

model Review {
  id          Int      @id @default(autoincrement())
  stars       Int   
  description String 
  userId      Int
  productId   Int
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  isDeleted   Boolean  @default(false)
  user        User     @relation(fields: [userId], references: [id])
  product     Product  @relation(fields: [productId], references: [id])
  @@map("tbl_reviews")
}

model Order {
  id          Int       @id @default(autoincrement())
  userId      Int
  orderDate   DateTime  @default(now())
  totalPrice  Decimal
  isDeleted   Boolean  @default(false)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  user        User      @relation(fields: [userId], references: [id])
  orderStatus OrderStatus
  items       OrderItem[]
  @@map("tbl_orders")
}

model OrderItem {
  id           Int       @id @default(autoincrement())
  orderId      Int
  productId    Int
  quantity     Int
  price        Decimal
  isDeleted    Boolean  @default(false)
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  order        Order     @relation(fields: [orderId], references: [id])
  product      Product   @relation(fields: [productId], references: [id])
  @@map("tbl_ordered_items")
}

model CartItem {
 id        Int @id @default(autoincrement())
 productId Int
 userId    Int 
 quantity  Int
 isDeleted Boolean
 product   Product @relation(fields: [productId], references: [id])
 user      User @relation(fields: [userId], references: [id])
 @@map("tbl_cart_items")
}

model Admin {
  id          Int @id @default(autoincrement())
  firstName   String
  lastName    String
  email       String @unique
  password    String
  isDeleted   Boolean
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  @@map("tbl_admins")
}